<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Demo.Providers.Test</name>
    </assembly>
    <members>
        <member name="M:Demo.Providers.Test.ProviderInfo.Save(System.String)">
            <summary>
            Saves this provider's state to a single file or multiple files in the specified folder.
            All files in the folder will be embedded within the workbench project structure. You can save the provider's
            data in any format you like, such as xml, binary serialization etc. What files you create and
            what you put inside them is totally up to you.
            </summary>
            <param name="folder">Folder to save the files to.</param>
        </member>
        <member name="M:Demo.Providers.Test.ProviderInfo.Open(System.String)">
            <summary>
            Reads the page/object(s) state from file eg: xml, binary serialization etc
            </summary>
            <param name="folder">Folder to open files from.</param>
        </member>
        <member name="M:Demo.Providers.Test.ProviderInfo.PerformPreAnalysisActions">
            <summary>
            Perform any actions you need to just before analysis and generation begins.
            </summary>
        </member>
        <member name="M:Demo.Providers.Test.ProviderInfo.IsValid(System.String@)">
            <summary>
            Returns whether this provider is in a valid state. This typically gets called just before generation.
            If false is returned, analysis and generation will not proceed.
            </summary>
            <param name="failReason">The reason for the invalid state.</param>
            <returns>True if the provider's state is valid, false otherwise.</returns>
        </member>
        <member name="M:Demo.Providers.Test.ProviderInfo.GetAllObjectsOfType(System.String)">
            <summary>
            Returns all objects of the specified type that currently exist in this provider. This typically gets called
            when analysis and generation begins and the objects get passed to the template to create the output files.
            </summary>
            <param name="typeName">Fully qualified name of the type of objects to return.</param>
            <returns>An arra of objects of the specified type.</returns>
        </member>
        <member name="M:Demo.Providers.Test.ProviderInfo.GetAllObjectsOfType(System.String,ArchAngel.Interfaces.IScriptBaseObject)">
            <summary>
            Returns all objects of the specified type that are valid 'beneath' the supplied rootObject. This typically gets called
            when analysis and generation begins and the objects get passed to the template to create the output files.
            </summary>
            <param name="typeName">Fully qualified name of the type of objects to return.</param>
            <param name="rootObject">Object by which the results must get filtered.</param>
            <returns>An arra of objects of the specified type.</returns>
        </member>
        <member name="T:Demo.Providers.Test.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Demo.Providers.Test.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Demo.Providers.Test.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="F:Demo.Providers.Test.Screens.Screen1.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Demo.Providers.Test.Screens.Screen1.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Demo.Providers.Test.Screens.Screen1.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Demo.Providers.Test.Screens.Screen1.Next">
            <summary>
            Gets called when the user clicks the 'Next' button. Return false to cancel the action 
            and prevent the previous screen from being loaded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Demo.Providers.Test.Screens.Screen1.Back">
            <summary>
            Gets called when the user clicks the 'Back' button. Return false to cancel the action 
            and prevent the previous screen from being loaded.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
