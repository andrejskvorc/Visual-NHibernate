<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAS+SURBVFhHrZdPaFxVFMbHUovSQutsJpksakoKGmvIJBmb
        LCZNNCGkGstUkzJqhERD6UBLI7iIkSQYuggomkoipmXSZDGULGxFRkhpAwMuAiraRUEQ3diFiEVcuBHx
        6Hfqd3PezXv2CQZO7p+575zf/e65976XSPzzVygUpL+/39ng4KDWUQ4MDLjSr6MdZfSRz+cDvsfGxoRx
        tczlcrK6uirVajWWbWxsyPr6urMrV69KpVIRlGtra2poR/lbWloSxNTg3d3d+oB1iAfRZlm+XJbS5ZIs
        lBdk5tMZmbw2KWeqZ2R0c1SGvhqSo7eOSu67nDTfbpaGnxqk5tcaHWN90BfjAAIKJbLZrJKDmGZhAJf/
        Ii87/9j5nwyw1g98o80Y8IvYKj9lo3QWBvXSSknavm2LDVB7p1YwQ98PJmqXSQHwD4ORAxaEdT5w/uJ5
        afihIRYEYOmPz7NEP2x5+dJdBQgACIL4MMgB9E2UJmIBHL9xXH1hEuVyWUsbGL8tLi5uAczNzWkHISwM
        6+feOyf7b++PBVBcKTpfCGz9Ig4MMZ0CU1NT2kEQDuKD6G/9sjVWcCTrsZeOCfZ6sViU8fFxgf/Z2Vn1
        Pz8/ryXaAQA7yA5EffjD4djBd3+zW/c4tjcPNtRh7MfBNDIysgXgk4IOBiickMnNZGyAVCWlwXp7exWA
        wQmAWTc2Nkp9fb2WCfyzckEyGI/m9mfaI4PvurNLENCeEQffOehmTwiCQIFQAAQDBAynE+VDeejNQ6EA
        O37bIdmXszq2plLjxrSMtgTOfasCADo6OrYrwEsDA+z69T3dJ5hR2CkIMPyOAJ0DnZL6LCWA6uzr3AZg
        FQgFoDSQh2vGhw4sHtgGgJzAONyCGIekAkTdR3Vu7e3NapNxGwCSgQnhK4AHwxTA7OmUVy1guHS8njGG
        kJwYADKZzFYSEgCz97cPHDSfbQ4oAJkhPRyPvtamRhXsewH7rBLcCYFdcC8ABLM5sPfWXjf7dysPy7Xf
        75Plrx+SkxOt7sUk6kWEALEVgCMA2HMAycbZXbq5T278mXCGNkD4JmVLfyti4gBJRCnAWUDWzHTGqZBe
        TzuAT365PwBAGIA8X3hKk9MuBfMAy+0OIlaYA372EmTP93sUggoURnpCg79/vU6GT3Y5FQBh3wm54wIA
        aDABQYmg1gBFFZI3k7rWp6ef0PW3S4D6629nAs/6APBPBfQysgrYC4TrRxC0MXscv6jPLD+iABc2UwEQ
        KOBPwCrARIxUwA9snfUM9yjAkVeO6ExfPfukBgMElcCO8AG4jEzEyBywClgnuCtg6Ds8eVia5pu0zv63
        Vh51AB9Ua+8JgOWGAm4JbA7YrcOgNhjqXae6AgDTFx9TACzJGwtNDiwsl2wO6HVst2GUAhaAUJw9Sh5I
        H//8gJx44Vmnlp/IoUuQTqedHNwJNvHClsIGHzrxnFz58UGd/enp9kj5ec1TAcR1CrBht+K/JaPNCSQj
        gvvbz35b+u8ECOwAkAjJZNKpYC8l/2r2Dymcdhc+3ycvnrp7Idlr1wbl1sMEeREhJvr1+xANGJcDg6zx
        Ncove/P10tL6uHvNihpHX8g3xGC8wBcyHsaPNCbn/1Va3+7L+G+CvwDvkR1s0tukywAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>